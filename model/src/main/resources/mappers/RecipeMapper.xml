<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.hoh.model.mapper.RecipeMapper" >
  <resultMap id="BaseResultMap" type="com.example.hoh.model.entity.Recipe" >
    <id column="recipe_ID" property="recipeId" jdbcType="INTEGER" />
    <result column="recipe_title" property="recipeTitle" jdbcType="VARCHAR" />
    <result column="calories" property="calories" jdbcType="INTEGER" />
    <result column="directions" property="directions" jdbcType="VARCHAR" />
    <result column="ingredients" property="ingredients" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    recipe_ID, recipe_title, calories, directions, ingredients
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from recipe
    where recipe_ID = #{recipeId,jdbcType=INTEGER}
  </select>

  <select id="selectByCalories" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from recipe
    where calories = #{calories,jdbcType=INTEGER}
  </select>
  <select id="selectByParamsMap" resultMap="BaseResultMap">
    select
    DISTINCT r.recipe_ID, r.recipe_title, r.calories, r.directions, r.ingredients
    from recipe r, recipe_category rc
    where r.calories &lt;= #{calories,jdbcType=INTEGER}
    AND r.recipe_ID = rc.recipe_ID
    <if test="title != null" >
      AND r.recipe_title LIKE CONCAT('%', #{title}, '%')
    </if>
    <if test="category != null" >
      AND rc.category_ID IN
      <foreach collection="category" item="id" index="index" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
    ORDER BY calories DESC
  </select>

  <select id="selectByFavorite" resultMap="BaseResultMap">
    select
    r.recipe_ID, r.recipe_title, r.calories, r.directions, r.ingredients
    from recipe r, favorite f
    where f.user_ID= #{user_id,jdbcType=INTEGER}
    AND r.recipe_ID = f.recipe_ID
    ORDER BY calories DESC
  </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from recipe
    where recipe_ID = #{recipeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.hoh.model.entity.Recipe" >
    insert into recipe (recipe_ID, recipe_title, calories, 
      directions, ingredients)
    values (#{recipeId,jdbcType=INTEGER}, #{recipeTitle,jdbcType=VARCHAR}, #{calories,jdbcType=INTEGER}, 
      #{directions,jdbcType=VARCHAR}, #{ingredients,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.hoh.model.entity.Recipe" >
    insert into recipe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recipeId != null" >
        recipe_ID,
      </if>
      <if test="recipeTitle != null" >
        recipe_title,
      </if>
      <if test="calories != null" >
        calories,
      </if>
      <if test="directions != null" >
        directions,
      </if>
      <if test="ingredients != null" >
        ingredients,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recipeId != null" >
        #{recipeId,jdbcType=INTEGER},
      </if>
      <if test="recipeTitle != null" >
        #{recipeTitle,jdbcType=VARCHAR},
      </if>
      <if test="calories != null" >
        #{calories,jdbcType=INTEGER},
      </if>
      <if test="directions != null" >
        #{directions,jdbcType=VARCHAR},
      </if>
      <if test="ingredients != null" >
        #{ingredients,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hoh.model.entity.Recipe" >
    update recipe
    <set >
      <if test="recipeTitle != null" >
        recipe_title = #{recipeTitle,jdbcType=VARCHAR},
      </if>
      <if test="calories != null" >
        calories = #{calories,jdbcType=INTEGER},
      </if>
      <if test="directions != null" >
        directions = #{directions,jdbcType=VARCHAR},
      </if>
      <if test="ingredients != null" >
        ingredients = #{ingredients,jdbcType=VARCHAR},
      </if>
    </set>
    where recipe_ID = #{recipeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hoh.model.entity.Recipe" >
    update recipe
    set recipe_title = #{recipeTitle,jdbcType=VARCHAR},
      calories = #{calories,jdbcType=INTEGER},
      directions = #{directions,jdbcType=VARCHAR},
      ingredients = #{ingredients,jdbcType=VARCHAR}
    where recipe_ID = #{recipeId,jdbcType=INTEGER}
  </update>
</mapper>
